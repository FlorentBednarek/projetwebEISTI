{"version":3,"sources":["NavBar/images/logo.png","NavBar/NavBar.js","Accueil/Login.js","Accueil/Register.js","messagerie/newMatch.js","Accueil/Acceuil.js","Profil/Preference.js","Position/Position.js","Pageprincipale/Pageprincipale.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","toggleNavbar","bind","state","collapsed","this","setState","classOne","classTwo","className","to","src","logo","alt","width","height","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Login","alertShow","alertMessage","alertVariant","email","password","connected","event","preventDefault","axios","require","default","sha256","url","URL_API","get","then","res","data","Cookies","set","key","console","log","catch","err","target","name","value","Alert","variant","show","onClose","dismissible","onSubmit","sendLogin","placeholder","onChange","inputChange","Register","verifPassword","prenom","nom","dateBirth","ville","StudentCard","alertClass","context","lat","long","etape","curr","Date","setDate","getDate","toISOString","substr","positionArobase","indexOf","length","verif","formData","FormData","append","post","error","files","reader","FileReader","readAsDataURL","onload","e","features","properties","city","geometry","coordinates","sendAccount","htmlFor","inputChangeVille","maxLength","min","max","fifteenYearsAgo","sendCard","color","inputChangeStudentCard","href","NewMatch","formdata","config","headers","logginid","logginkey","createMatch","Accueil","verifConnexion","connect","etat","changeShow","aria-hidden","Preference","Description","Taille","City","value1","for","selected","draggableTrack","maxValue","minValue","onChangeComplete","value5","style","resize","rows","cols","Position","Pageprincipale","deconnect","test","remove","App","basename","path","exact","component","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.66e5ab2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1e0b9a13.png\";","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport logo from './images/logo.png';\r\n\r\n\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true,\r\n    };\r\n  }\r\n  toggleNavbar() {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    const collapsed = this.state.collapsed;\r\n    const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\r\n    const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\r\n    return (\r\n    <nav className = \"navbar navbar-expand-md bg-grad navbar-dark sticky-top\">\r\n    <div className=\"container\">\r\n    <Link to=\"/\" className=\"navbar-brand\">\r\n    \t<img src={logo} alt=\"logo\" width=\"40px\" height=\"40px\"/>\r\n    </Link>\r\n      <button  onClick={this.toggleNavbar} className={`${classTwo}`} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className={`${classOne}`} id=\"navbarResponsive\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            \r\n            <li className=\"nav-item active\">\r\n              <Link className=\"collapsed nav-link\" to=\"/\">Home </Link>\r\n            </li>\r\n            \r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/about\">About </Link>\r\n            </li>\r\n            \r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/contact\">Contact </Link>\r\n            </li>\r\n\r\n          </ul>\r\n        </div>\r\n    </div>\r\n  </nav>\r\n    );\r\n  }\r\n}\r\nexport default NavBar;\r\n\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Cookies from 'js-cookie';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {URL_API} from '../App';\r\n\r\nclass Login extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          alertShow: false, alertMessage : \"\", alertVariant:\"\",//Affichage, message et type de l'alerte\r\n          email: \"\", password : \"\", //Input mail et password\r\n          connected : false\r\n        };\r\n      }\r\n\r\n      /**\r\n       * Compare les identifiants avec la base de donnée\r\n       * Si les identifiants existent et sont bon, l'utilisateur est connecté\r\n       * @param {*} event Action du form par le bouton Submit\r\n       */\r\n      sendLogin(event) {\r\n        event.preventDefault();\r\n        const axios = require('axios').default;  //Requêtes HTTP\r\n        const sha256 = require('hash-anything').sha256; //Hash du mdp\r\n        const url = URL_API+'getPrenom.php?mail='+this.state.email+'&password='+sha256(this.state.password);\r\n        axios.get(url)\r\n        .then(res => {\r\n          if(res.data.id>0){\r\n            //Se connecter\r\n            Cookies.set(\"ID\",res.data.id);\r\n            Cookies.set(\"KEY\",res.data.key);\r\n            console.log(\"Vous êtes connecté, redirection vers la page principale !\");\r\n            this.setState({\r\n              connected:true\r\n            });\r\n          }else{\r\n            //Affichage en rouge du message de mdp incorrect\r\n            console.log(res);\r\n            this.setState({alertShow:true,alertMessage:\"Adresse mail ou mot de passe incorrect.\",alertVariant:\"danger\"});\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          //Affichage en jaune qu'il y a une erreur dans la requête\r\n          this.setState({alertShow:true,alertMessage:\"Une erreur s'est produite.\",alertVariant:\"warning\"});\r\n        });\r\n      }\r\n     \r\n      /**\r\n       * Met à jour la valeur du form dans lequel l'utilisateur écrit\r\n       * @param {*} event Appuie sur une touche\r\n       */\r\n      inputChange(event) {\r\n        event.preventDefault();\r\n        /* Mise à jour des valeurs des inputs */\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n          [name]: value\r\n        })\r\n      }\r\n\r\n    render(){\r\n        /* Utilisateur redirigé si connecté */\r\n        if(this.state.connected){\r\n          return(<Redirect to='/principale'/>); //Redirection vers la page principale\r\n        }\r\n      return(\r\n        <div>\r\n          {/* Alert affichée lorsque le couple (e-mail,mdp) n'est pas trouvé dans la base de donnée */}\r\n          <Alert\r\n          variant={this.state.alertVariant} \r\n          id=\"AlertIncorrect\" \r\n          show={this.state.alertShow} \r\n          onClose={() => this.setState({alertShow:false})}\r\n          dismissible>\r\n            {this.state.alertMessage}\r\n          </Alert>\r\n\r\n          {/* Formulaire de connexion */}\r\n          <form onSubmit={event => this.sendLogin(event)}>\r\n            <input className=\"input\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"Ton adresse e-mail\"\r\n              value={this.state.email}\r\n              onChange={event => this.inputChange(event)} \r\n            />\r\n            <br />\r\n            <br />\r\n            <input className=\"input\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Ton mot de passe\"\r\n              value={this.state.password}\r\n              onChange={event => this.inputChange(event)} \r\n            />\r\n            <br />\r\n            <button className=\"btn btn-danger\" type=\"submit\">Connexion</button>\r\n          </form>\r\n\r\n          {/* Mot de passe oublié, redirection à définir, accueil pour l'instant */}\r\n          <NavLink className=\"text-pink\" to=\"/\" >Mot de passe oublié ?</NavLink>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\n\r\nimport {URL_API} from '../App';\r\n\r\nclass Register extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          //Valeur des input email, password, prenom, nom, dateBirth, ville et StudentCard\r\n          email: \"\", password : \"\", verifPassword : \"\", prenom : \"\", nom : \"\", dateBirth : \"\", ville : \"\",\r\n          StudentCard: null,\r\n          alertShow:false, alertMessage:\"\", alertClass:\"alert-danger\", //Affichage, type et définition du message de l'alert\r\n          name: \"\", context:null, lat: null, long: null, //Resultat de l'API, ville et coordonnées GPS\r\n          etape: 0 //0 -> Creation du compte; 1 -> Upload carte étudiante; 2 -> Création du compte terminée\r\n        };\r\n      }\r\n\r\n      /**\r\n       * Renvoi la date actuelle à laquelle on a retiré 15*365 jours\r\n       */\r\n      fifteenYearsAgo(){\r\n        let curr = new Date();\r\n        curr.setDate(curr.getDate()-365*15);\r\n        return (curr.toISOString().substr(0,10));\r\n      }\r\n\r\n      /**\r\n       * Renvoie vrai si le formulaire est estimé complet et correct\r\n       * Renvoi faux si le formulaire est estimé incomplet ou incorrect\r\n       * Effectue une suite de vérification sur la valeur des inputs\r\n       */\r\n      verif(){ //Vérification de la véracité des données\r\n        let positionArobase= this.state.email.indexOf(\"@\");\r\n        if(this.state.email===\"\"){ //Chaîne vide\r\n          this.setState({alertMessage: \"Votre e-mail n'est pas précisé.\"});\r\n          return false;\r\n        }else if(this.state.email.indexOf(\"@\")===-1){ //Ne contient pas de @\r\n          this.setState({alertMessage: \"Votre e-mail n'est pas correcte.\"});\r\n          return false;\r\n        }else if(!(this.state.email.indexOf(\".com\",positionArobase) !== -1 ||\r\n        this.state.email.indexOf(\".fr\",positionArobase) !== -1 ||\r\n        this.state.email.indexOf(\".eu\",positionArobase) !== -1 ||\r\n        this.state.email.indexOf(\".org\",positionArobase) !== -1 ||\r\n        this.state.email.indexOf(\".net\",positionArobase) !== -1)){ //Ne fini pas par .com/.fr/.eu/.org/.net\r\n          this.setState({alertMessage: \"Votre e-mail doit finir par .com/.fr/.eu/.org/.net.\"});\r\n          return false;\r\n        }\r\n        if(this.state.password.length < 6){ //Taille mdp inférieure à 6\r\n          this.setState({alertMessage: \"Votre mot de passe doit contenir plus de 6 caractère.\"});\r\n          return false;\r\n        }else if(this.state.password!==this.state.verifPassword){\r\n          this.setState({alertMessage: \"Vos mots de passe ne correspondent pas.\"});\r\n          return false;\r\n        }\r\n        if(this.state.nom.length < 2 || this.state.nom.length < 2){ //Taille nom et prenom => 2\r\n          this.setState({alertMessage: \"Vous n'avez pas renseignez votre nom/prénom.\"});\r\n          return false;\r\n        }\r\n        if(this.state.name===\"\"){this.setState({name:this.state.ville});}\r\n        if(this.state.name.length < 2){ //Taille ville => 2\r\n          this.setState({alertMessage: \"Vous n'avez pas renseignez votre ville.\"});\r\n          return false;\r\n        }\r\n        if(this.state.dateBirth===\"\"){\r\n          this.setState({alertMessage: \"Votre date de naissance n'est pas précisée.\"});\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n\r\n      /**\r\n       * Envoie les données du 1er formulaire avec les coordonnées de la ville\r\n       * au serveur pour pouvoir creer un compte\r\n       * @param {*} event Action du 1er form par le bouton Submit\r\n       */\r\n      sendAccount(event) {\r\n        event.preventDefault();\r\n        const axios = require('axios');  //Requêtes HTTP\r\n        const sha256 = require('hash-anything').sha256; //Hash du mdp\r\n\r\n        if(!this.verif()){ //Un des champs mal rempli\r\n          this.setState({alertShow:true});\r\n        }else{\r\n          let formData = new FormData();\r\n          formData.append('email',this.state.email);\r\n          formData.append('password',sha256(this.state.password));\r\n          formData.append('prenom',this.state.prenom);\r\n          formData.append('nom',this.state.nom);\r\n          formData.append('dateBirth',this.state.dateBirth);\r\n          formData.append('ville',this.state.name);\r\n          formData.append('coor',this.state.lat+\";\"+this.state.long);\r\n          const url = URL_API+'newUser.php';\r\n          axios.post(url,formData)\r\n          .then(res => {\r\n            console.log(\"Réponse newUser: \"+res.data);\r\n            if(res.data>=0){\r\n              switch(res.data){\r\n                case 0:\r\n                  this.setState({\r\n                    alertMessage: \"L'adresse mail existe déjà.\",\r\n                    alertClass:\"alert-danger\",\r\n                  });\r\n                  break;\r\n                case 1:\r\n                  this.setState({\r\n                    alertClass:\"alert-primary\",\r\n                    alertMessage: \"Compte crée avec succès !\",\r\n                    etape:1\r\n                  });\r\n                  break;\r\n                default:\r\n                  this.setState({alertMessage: \"La réponse de l'API n'est pas celle attendue.\"});\r\n              }\r\n              this.setState({alertShow: true});\r\n            }else{\r\n              console.error('Problème dans le retour de l\\'API/newUser.');\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n        }\r\n      }\r\n      \r\n      /**\r\n       * Envoie de la valeur du champ file au serveur pour faire vérifier\r\n       * la carte étudiante par les modérateurs\r\n       * @param {*} event Action du 2nd form par le bouton Submit\r\n       */\r\n      sendCard(event){\r\n        event.preventDefault();\r\n        const axios = require('axios');  //Requêtes HTTP\r\n        \r\n        let formData = new FormData();\r\n        formData.append('file',this.state.StudentCard);\r\n        formData.append('email',this.state.email);\r\n\r\n        const url = URL_API+'setCarteEtudiante.php';\r\n          axios.post(url,formData)\r\n          .then(res => {\r\n            console.log(\"Réponse setCarteEtudiante: \"+res.data);\r\n            if(res.data>=0){\r\n              switch(res.data){\r\n                case 0:\r\n                  this.setState({\r\n                    alertMessage: \"Aucune carte étudiante n'a été envoyée.\",\r\n                    alertClass:\"alert-secondary\",\r\n                    etape:2\r\n                  });\r\n                  break;\r\n                case 1:\r\n                  this.setState({\r\n                    alertClass:\"alert-primary\",\r\n                    alertMessage: \"Carte étudiante envoyée avec succès !\",\r\n                    etape:2\r\n                  });\r\n                  break;\r\n                case 2:\r\n                  this.setState({\r\n                    alertClass:\"alert-danger\",\r\n                    alertMessage: \"Votre image dépasse 2Mo !\",\r\n                  });\r\n                  break;\r\n                case 3:\r\n                  this.setState({\r\n                    alertClass:\"alert-danger\",\r\n                    alertMessage: \"L'extension de votre image n'est pas acceptée !\",\r\n                  });\r\n                  break;\r\n                default:\r\n                  this.setState({alertMessage: \"La réponse de l'API n'est pas celle attendue.\"});\r\n              }\r\n              this.setState({alertShow: true});\r\n            }else{\r\n              this.setState({\r\n              alertClass:\"alert-warning\",\r\n              alertMessage: \"L'image a rencontré un problème durant l'upload.\",\r\n              alertShow: true\r\n              });\r\n              console.error('Problème dans le retour de l\\'API/setCarteEtudiante.');\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            this.setState({\r\n              alertClass:\"alert-warning\",\r\n              alertMessage: \"La requête/le serveur a rencontré un problème.\",\r\n              alertShow: true\r\n            });\r\n          });\r\n        }\r\n\r\n      /**\r\n       * Change la valeur de l'état StudentCard en fonction du fichier sélectionné\r\n       * @param {*} event Fichier sélectionné\r\n       */\r\n      inputChangeStudentCard(event){\r\n        let files = event.target.files;\r\n        let reader = new FileReader();\r\n        if(files[0]!=null){\r\n          reader.readAsDataURL(files[0]);\r\n          reader.onload=(e)=>{\r\n            this.setState({\r\n              StudentCard:files[0]\r\n            })\r\n            console.log(this.state.StudentCard);\r\n          }\r\n        }else{\r\n          this.setState({\r\n            StudentCard:null\r\n          })\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Propose une ville française selon la valeur du champs ville et mise à\r\n       * jour de ses coordonnées grâce à l'API Adresse du gouvernement\r\n       * @param {*} event Ajout/Suppression d'un caractère dans le champ ville\r\n       */\r\n      inputChangeVille(event){\r\n        event.preventDefault();\r\n        this.setState({\r\n          ville: event.target.value\r\n        })\r\n        if(event.target.value!==\"\"){\r\n          const axios = require('axios').default;\r\n          const url = \"https://api-adresse.data.gouv.fr/search/?q=\"+event.target.value+\"&type=municipality&autocomplete=1\"\r\n          axios.get(url)\r\n          .then(res => {\r\n            if(res.data!==null){\r\n              if(res.data.features[0]!=null){\r\n                this.setState({\r\n                name: res.data.features[0].properties.city,\r\n                lat: res.data.features[0].geometry.coordinates[1],\r\n                long: res.data.features[0].geometry.coordinates[0],\r\n                context: res.data.features[0].properties.context\r\n                })\r\n              }\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            //Affichage en jaune qu'il y a une erreur dans la requête\r\n            this.setState({alertShow:true,alertMessage:\"Une erreur s'est produite.\",alertVariant:\"warning\"});\r\n          });\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Mettre de lier l'écriture dans les champs aux valeurs correspondantes \r\n       * dans l'état du composant\r\n       * @param {*} event Ajout/Suppression d'un caractère dans un champs \r\n       */\r\n      inputChange(event) {\r\n        event.preventDefault();\r\n        /* Mise à jour des valeurs des inputs */\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n          [name]: value\r\n        })\r\n      }\r\n\r\n    render(){\r\n      return(\r\n        <div className=\"text-blue\">\r\n          {this.state.alertShow &&\r\n            <div className={\"alert alert-dismissible fade show \" + this.state.alertClass} >\r\n              {this.state.alertMessage}\r\n            </div>\r\n          }\r\n          {this.state.etape===0  && //Etape initiale du composant\r\n            <form onSubmit={event => this.sendAccount(event)}>\r\n            {/* 1er Formulaire d'enregistrement du compte' */}\r\n              {/* Input email */}\r\n              <label htmlFor=\"email\">E-mail :</label>\r\n              <input className=\"input\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"text\"\r\n                placeholder=\"Ton adresse e-mail\"\r\n                value={this.state.email}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br />\r\n              {/* Input password */}\r\n              <label htmlFor=\"password\">Mot de passe :</label>\r\n              <input className=\"input\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Ton mot de passe\"\r\n                value={this.state.password}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br />\r\n              {/* Input verifPassword */}\r\n              <label htmlFor=\"verifPassword\">Vérifie ton mot de passe :</label>\r\n              <input className=\"input\"\r\n                id=\"verifPassword\"\r\n                name=\"verifPassword\"\r\n                type=\"password\"\r\n                placeholder=\"Ton mot de passe\"\r\n                value={this.state.verifPassword}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br />\r\n              {/* Input nom */}\r\n              <label htmlFor=\"nom\">Nom :</label>\r\n              <input className=\"input\"\r\n                id=\"nom\"\r\n                name=\"nom\"\r\n                type=\"text\"\r\n                placeholder=\"Ton Nom\"\r\n                value={this.state.nom}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br />\r\n              {/* Input prenom */}\r\n              <label htmlFor=\"prenom\">Prénom :</label>\r\n              <input className=\"input\"\r\n                id=\"prenom\"\r\n                name=\"prenom\"\r\n                type=\"text\"\r\n                placeholder=\"Ton prénom\"\r\n                value={this.state.prenom}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br/>\r\n              {/* Input ville */}\r\n              <label htmlFor=\"ville\">Ville :</label>\r\n              <input className=\"input\"\r\n                id=\"ville\"\r\n                name=\"ville\"\r\n                type=\"text\"\r\n                placeholder=\"Ta ville\"\r\n                value={this.state.ville}\r\n                onChange={event => this.inputChangeVille(event)} \r\n              />\r\n              {/* Information sur la ville trouvée si le champs n'est pas vide */}\r\n              {this.state.name!==\"\" &&\r\n                <label htmlFor=\"ville\">\r\n                  {this.state.name+\" - \"+this.state.context}\r\n                </label>\r\n              }\r\n              <br />\r\n              {/* Input dateBirth */}\r\n              <label htmlFor=\"dateBirth\">Date de naissance :</label>\r\n              <input className=\"input\"\r\n                id=\"dateBirth\"\r\n                name=\"dateBirth\"\r\n                type=\"date\"\r\n                maxLength=\"10\"\r\n                placeholder=\"jj/mm/aaaa\"\r\n                min=\"1960-01-01\"\r\n                max={this.fifteenYearsAgo()}\r\n                value={this.state.dateBirth}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br/>\r\n              {/* Bouton Submit 1 */}\r\n              <button className=\"btn btn-danger\" type=\"submit\">S'enregister</button>\r\n            </form>\r\n          }\r\n          {this.state.etape===1  && //Etape création identifiant terminée\r\n            <form onSubmit={event => this.sendCard(event)}>\r\n            {/* 2nd Formulaire pour upload la carte étudiante */}\r\n              <h4>Envoi de la carte étudiante</h4>\r\n              <p color=\"grey\">Votre carte étudiante dois être au format .png/.jpg/.jpeg \r\n              et ne doit pas dépasser 2Mo.</p>\r\n              {/* Input StudentCard */}\r\n              <label htmlFor=\"Student_Card\">Carte étudiante :</label>\r\n              <input className=\"input\" \r\n              type=\"file\" \r\n              name=\"StudentCard\" \r\n              id=\"Student_Card\"\r\n              onChange={event => this.inputChangeStudentCard(event)} \r\n              />\r\n              <br/>\r\n              {/* Bouton Submit 2 */}\r\n              <button type=\"submit\">Upload</button>\r\n            </form>\r\n          }\r\n          {this.state.etape===2 && //Etape carte étudiante terminée\r\n            <div>\r\n              <h4 className=\"text-blue\">Ton compte viens d'être créé</h4>\r\n              <p className=\"text-blue\">Je t'invite à aller vite te connecter pour profiter de notre application :)</p>\r\n              <a href=\"/\"><button className=\"btn btn-danger\">Fermer</button></a>{/* Il faudrait connecter directement */}\r\n            </div>\r\n          }\r\n\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Cookies from 'js-cookie';\r\n\r\nimport {URL_API} from '../App';\r\n\r\nclass NewMatch extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t}\r\n\tcreateMatch(event){\r\n\t\tevent.preventDefault();\r\n\t\tconst axios = require('axios');  //Requêtes HTTP\r\n\t\tlet formdata = new FormData();\r\n\t\tlet config = {\r\n            headers: {\r\n            logginid: Cookies.get(\"ID\"),\r\n            logginkey: Cookies.get(\"KEY\")\r\n            }\r\n        }\r\n\t\tformdata.append(\"id2\",\"42\");\r\n        const url = URL_API+'newDisc.php';\r\n        axios.post(url,formdata,config)\r\n        .then(res => {\r\n            console.log(\"Réponse newMatch: \"+res.data);\r\n            if(res.data=='1'){\r\n              this.setState({\r\n                alertClass:\"alert-primary\",\r\n                alertMessage: \"discution créé avec succès !\",\r\n                etape:1\r\n              });\r\n              this.setState({alertShow: true});\r\n            }else if(res.data == '2'){\r\n            \tconsole.error(\"vous n'avez pas l'air d'etre connecté\");\r\n            }else {\r\n            \tconsole.error('Problème dans le retour de l\\'API/newUser.');\r\n\r\n            }\r\n          })\r\n        .catch(err => {\r\n            console.log(err);\r\n          });\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<button className=\"btn btn-danger\" onClick={event => this.createMatch(event)}></button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default NewMatch;","import React, { Component } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport {URL_API} from '../App';\r\n\r\nimport Login from './Login'\r\nimport Register from './Register'\r\nimport NewMatch from '../messagerie/newMatch';\r\n\r\nclass Accueil extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: 0, \r\n            /* Correspondance show\r\n            * 0 -> Accueil\r\n            * 1 -> Accueil + Login\r\n            * 2 -> Accueil + Register \r\n            */\r\n           connected : false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Page initialisée\r\n     */\r\n    componentDidMount(){\r\n        /* Vérif des cookies ID et KEY */\r\n        this.verifConnexion();\r\n    }\r\n\r\n    /**\r\n     * Met à jour l'état connected selon la véracité \r\n     * du couple (Cookie.get(\"ID\"),Cookie.get(\"KEY\"))\r\n     */\r\n    verifConnexion() {\r\n        const url = URL_API+'isConnected.php';\r\n        const axios = require('axios').default;  //Requêtes HTTP\r\n        let config = {\r\n            headers: {\r\n            logginid: Cookies.get(\"ID\"),\r\n            logginkey: Cookies.get(\"KEY\")\r\n            }\r\n        }\r\n        axios.get(url,config)\r\n        .then(res => {\r\n            if(res.data.connect){ //Mise à jour de connected si réponse positive \r\n                this.setState({\r\n                    connected:true\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Changement du state.show\r\n     * @param {*} etat : attribut la valeur etat à state.show\r\n     */\r\n    changeShow(etat){\r\n        this.setState({\r\n            show: etat\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Retourne un l'affichage de la page d'accueil.\r\n     * - Deux boutons : Connexion & Création du compte\r\n     * - L'affichage dépend de this.state.show\r\n     */\r\n    render(){\r\n        /* Utilisateur redirigé si connecté */\r\n        if(this.state.connected){\r\n            return <Redirect to='/principale'/> //Renvoi à la page principale\r\n        }\r\n        return(\r\n            <div>\r\n                <h1 className=\"text-blue\">RENCONTRES, DISCUSSIONS,</h1>\r\n                <h2 className=\"text-purp\">ET VOUS ? </h2>\r\n                <h2 className=\"text-blue\">QUI ALLEZ-VOUS ETUDIER ?</h2>\r\n                \r\n                {/* show = 0 -> on affiche deux bouton Login et Register */}\r\n                {this.state.show === 0 && \r\n                    <div className=\"btn-group-vertical\">\r\n                        <button className=\"btn btn-danger\" onClick={etat => this.changeShow(1)}>Se connecter</button>\r\n                        <br/>\r\n                        <button className=\"btn btn-danger\" onClick={etat => this.changeShow(2)}>Se créer un compte</button>\r\n                        <NewMatch />\r\n                    </div>\r\n                }\r\n                {/* show = 1 -> on affiche Login */}\r\n                {this.state.show === 1 && \r\n                    <div>\r\n                        {/* Bouton de retour */}\r\n                        <button className=\"close\" onClick={etat => this.changeShow(0)} aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                        {/* Proposition de s'enregistrer s'il n'est pas encore dans la BDD */}\r\n                        <p className=\"text-danger\">Tu n'as toujours pas de compte ?&nbsp;\r\n                            {/* Utilisation du NavLink pour ses propriétés graphiques */}\r\n                            <NavLink className=\"text-pink\" to=\"/\" onClick={etat => this.changeShow(2)}>Je cours m'en faire un !</NavLink>\r\n                        </p>\r\n                        <h2 className=\"text-success\">Connexion</h2>\r\n                        <Login />\r\n                    </div>\r\n                }\r\n                {/* show = 2 -> on affiche Register */}\r\n                {this.state.show === 2 && \r\n                    <div>\r\n                        {/* Bouton de retour */}\r\n                        <button className=\"close\" onClick={etat => this.changeShow(0)} aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                        <h2 className=\"text-success\">Création du compte</h2>\r\n                        <Register />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Accueil;","import React, { Component } from 'react';\r\nimport InputRange from 'react-input-range';\r\n\r\n\r\nclass Preference extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //Prochaine étape : pré-sélectionner les valeurs déjà renseignées \r\n        //Simulation retour de la requête avec une constante(tableau je pense)\r\n\r\n        this.state = {\r\n          Description : null,\r\n          Taille : null,\r\n          City : \"Cergy\", //Valeur du input City          \r\n          value1: {min: 18, max: 24,},\r\n        };\r\n      }\r\n    \r\n\r\n      \r\n       \r\n\r\n      inputChange(event) {\r\n        event.preventDefault();\r\n        /* Mise à jour des valeurs des inputs */\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n          [name]: value\r\n        })\r\n      }\r\n\r\n    render(){\r\n      return(\r\n        <div>\r\n          {/* Formulaire du profil de la personne' */}\r\n         \r\n          <form onSubmit={event => this.sendLogin(event)}>\r\n            <br/>\r\n            <div>{/* Mettre les images de profils, la possibilité de les suppr ou les rajouter*/}\r\n              <label htmlFor=\"Photo\">Vos photos :</label>\r\n              <input type=\"file\" name=\"Photo\" id=\"Photo\"/>\r\n            </div>\r\n            <br/>\r\n            {/*--------------------------Sexe--------------------------*/}\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" for=\"sexe\">Je suis :</label>\r\n              </div> \r\n              <div className=\"form-check form-check-inline\">\r\n                <label className=\"form-check-label\" for=\"homme\">Un homme</label>\r\n                <input \r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"jeSuis\"\r\n                  id=\"homme\"\r\n                  value=\"Homme\"\r\n                />\r\n              </div>\r\n              <div className=\"form-check form-check-inline\">\r\n                <label className=\"form-check-label\" for=\"femme\">Une femme</label>\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"radio\" \r\n                  name=\"jeSuis\" \r\n                  id=\"femme\" \r\n                  value=\"Femme\"\r\n                />\r\n              </div>\r\n              <div className=\"form-check form-check-inline\">\r\n                <label className=\"form-check-label\" for=\"vivant\">Vivant</label>\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"radio\" \r\n                  name=\"jeSuis\" \r\n                  id=\"vivant\" \r\n                  value=\"Vivant\" \r\n                />\r\n              </div>\r\n            </div>\r\n            <br/>\r\n            {/*--------------------------Souhaite voir--------------------------*/}\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" for=\"lookingfor\">Je souhaite rencontrer :</label>\r\n              </div> \r\n              <div className=\"form-check form-check-inline\">\r\n                <label className=\"form-check-label\" for=\"homme\">Des hommes</label>\r\n                <input \r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"jeCherche\"\r\n                  id=\"homme\"\r\n                  value=\"Hommes\"\r\n                />\r\n              </div>\r\n              <div className=\"form-check form-check-inline\">\r\n                <label className=\"form-check-label\" for=\"femme\">Des femmes</label>\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"radio\" \r\n                  name=\"jeCherche\" \r\n                  id=\"femme\" \r\n                  value=\"Femmes\"\r\n                />\r\n              </div>\r\n              <div className=\"form-check form-check-inline\">\r\n                <label className=\"form-check-label\" for=\"both\">Les deux</label>\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"radio\" \r\n                  name=\"jeCherche\" \r\n                  id=\"both\" \r\n                  value=\"Les deux\" \r\n                />\r\n              </div>\r\n            </div>\r\n            <br/>\r\n          {/*--------------------------Cherche-------------------------- */}\r\n            <div className=\"input-group \">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" for=\"purpose\">Ce que je cherche :</label>\r\n              </div>\r\n              <select  id=\"purpose\">\r\n                <option selected>A remplir</option>\r\n                <option value=\"1\">Du sérieux</option>\r\n                <option value=\"2\">Aller boire un verre</option>\r\n                <option value=\"3\">On verra</option>\r\n                <option value=\"4\">Pas de prise de tête</option>\r\n                <option value=\"5\">Occuper ma soirée </option>\r\n                <option value=\"6\">Amitié </option>\r\n                <option value=\"7\">Seulement tchatter </option>\r\n              </select>\r\n            </div>\r\n            <br />\r\n           {/*--------------------------Tranche d age-------------------------- */}\r\n          \r\n                <label  for=\"Age\">Tranche d'age :</label>\r\n             \r\n               <InputRange\r\n                  draggableTrack\r\n                  maxValue={35}\r\n                  minValue={18}\r\n                  onChange={value => this.setState({ value1: value })}\r\n                  onChangeComplete={value => console.log(value)}\r\n                  value={this.state.value5} \r\n                />\r\n          \r\n            <br />\r\n            {/*--------------------------Description--------------------------*/}\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" for=\"Description\">A propos de vous :</label>\r\n              </div> \r\n                <textarea\r\n                  id=\"Description\"\r\n                  name=\"Description\"\r\n                  type=\"text\"\r\n                  placeholder=\"Vous avez 350 caractères pour nous en dire plus ;)\"\r\n                  style={{resize: \"none\"}}\r\n                  rows=\"2\"//hauteur\r\n                  cols=\"50\" //largeur\r\n                  maxLength=\"350\"\r\n                  value={this.state.Description}\r\n                  onChange={event => this.inputChange(event)} \r\n                />\r\n            </div>\r\n            <br/>\r\n            {/*-------------------------- City--------------------------*/}\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" for=\"City\">J'habite à :</label>\r\n              </div>                <input\r\n                  id=\"City\"\r\n                  name=\"City\"\r\n                  type=\"text\"\r\n                  placeholder=\"Paris\"\r\n                  value={this.state.City}\r\n                  onChange={event => this.inputChange(event)} \r\n                />\r\n            </div>\r\n            <br />\r\n            {/*--------------------------Etudes-------------------------- */}\r\n            <div className=\"input-group \">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" for=\"Study\">J'étudie au :</label>\r\n              </div>\r\n              <select  id=\"Study\">\r\n                <option selected>A remplir</option>\r\n                <option value=\"Lycée\">Lycée</option>\r\n                <option value=\"Université\">Université</option>\r\n                <option value=\"Ecole d'Ingénieur\">Ecole d'Ingénieur</option>\r\n                <option value=\"Ecole de commerce\">Ecole de commerce</option>\r\n                <option value=\"Ecole supérieur\">Ecole supérieur</option>\r\n                <option value=\"Reconversion\">Reconversion </option>\r\n                <option value=\"Année sabatique\">Année sabatique</option>\r\n              </select>\r\n            </div>\r\n            <br />\r\n            {/*--------------------------Taille-------------------------- */}\r\n            <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Taille\">Je mesure :</label>\r\n            </div>\r\n                 <input\r\n                  id=\"Taille\"\r\n                  name=\"Taille\"\r\n                  type=\"number\"\r\n                  min=\"100\"\r\n                  max=\"300\"\r\n                  onChange={event => this.inputChange(event)}\r\n                />\r\n              <div className=\"input-group-append\">\r\n                <label className=\"input-group-text\" for=\"Taille\">cm</label>\r\n              </div>\r\n            </div>\r\n          <br />\r\n        {/*--------------------------Yeux-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Yeux\">Mes yeux sont :</label>\r\n            </div>\r\n            <select  id=\"Yeux\">\r\n              <option selected value=\"none\">A remplir</option>\r\n              <option value=\"Noir\">Noir</option>\r\n              <option value=\"Marron\">Marron</option>\r\n              <option value=\"Vert\">Vert</option>\r\n              <option value=\"Bleu\">Bleu</option>\r\n              <option value=\"Verron\">Verron</option>\r\n              <option value=\"Autre\">Autre</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n          {/*--------------------------Cheveux-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Hair\">Mes cheveux sont :</label>\r\n            </div>\r\n            <select  id=\"Hair\">\r\n            <option selected value=\"none\">A remplir</option>\r\n              <option value=\"Noir\">Noir</option>\r\n              <option value=\"Brun\">Brun</option>\r\n              <option value=\"Auburn\">Auburn</option>\r\n              <option value=\"Châtain\">Châtain</option>\r\n              <option value=\"Roux\">Roux</option>\r\n              <option value=\"Blond\">Blond</option>\r\n              <option value=\"Blanc\">Blanc</option>\r\n              <option value=\"Autre\">Autre</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n          {/*--------------------------Sport-------------------------- */}\r\n          <div className=\"input-group \">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Sport\">Les activités physique :</label>\r\n            </div>\r\n            <select  id=\"Sport\">\r\n              <option selected value=\"none\">A remplir</option>\r\n              <option value=\"Passioné\">Passioné(e)</option>\r\n              <option value=\"Régulièrement\">Régulièrement</option>\r\n              <option value=\"Parfois\">Parfois</option>\r\n              <option value=\"Une fois au chalet\">Une fois au chalet</option>\r\n              <option value=\"Quelle horreur\">Quelle horreur</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n          {/*--------------------------Alcool-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Alcool\">L'alcool :</label>\r\n            </div>\r\n            <select  id=\"Alcool\">\r\n              <option selected value=\"none\">A remplir</option>\r\n              <option value=\"Tous les jours\">Tous les jours</option>\r\n              <option value=\"Régulièrement\">Régulièrement</option>\r\n              <option value=\"A l'occasion\">A l'occasion</option>\r\n              <option value=\"Jamais\">Jamais</option>\r\n            </select>\r\n            </div>\r\n          <br />\r\n          {/*--------------------------Tabac-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Tabac\">Le tabac :</label>\r\n            </div>\r\n            <select  id=\"Tabac\">\r\n              <option selected value=\"none\">A remplir</option>\r\n              <option value=\"Fréquemment\">Fréquemment</option>\r\n              <option value=\"A l'occasion\">A l'occasion</option>\r\n              <option value=\"Jamais\">Jamais</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n          {/*--------------------------Animaux Domestique-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Pet\">Mes animaux de compagnie :</label>\r\n            </div>\r\n            <select  id=\"Pet\">\r\n              <option selected value=\"none\">A remplir</option>\r\n              <option value=\"Chiens\">Chiens</option>\r\n              <option value=\"Chats\">Chats</option>\r\n              <option value=\"Beaucoup\">Beaucoup :)</option>\r\n              <option value=\"Autres\">Autres</option>\r\n              <option value=\"Aucun\">Aucun</option>\r\n              <option value=\"Allergique\">Allergique :'(</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n        {/*--------------------------Religion-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Religion\">Ma religion :</label>\r\n            </div>\r\n            <select  id=\"Religion\">\r\n              <option selected value=\"none\">A remplir</option>\r\n              <option value=\"Agnosticisme\">Agnosticisme</option>\r\n              <option value=\"Athéisme\">Athéisme</option>\r\n              <option value=\"Bouddhisme\">Bouddhisme</option>\r\n              <option value=\"Christianisme\">Christianisme</option>\r\n              <option value=\"Hindouisme\">Hindouisme</option>\r\n              <option value=\"Jaïnisme\">Jaïnisme</option>\r\n              <option value=\"Judaïsme\">Judaïsme</option>\r\n              <option value=\"Islam\">Islam</option>\r\n              <option value=\"Zoroastrisme\">Zoroastrisme</option>\r\n              <option value=\"Sikhisme\">Sikhisme</option>\r\n              <option value=\"Spiritualité\">Spiritualité</option>\r\n              <option value=\"Autre\">Autre</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n          {/*--------------------------Signe Astro-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Astro\">Mon signe astrologique :</label>\r\n            </div>\r\n            <select  id=\"Asro\">\r\n              <option selected value=\"none\">A remplir</option>\r\n              <option value=\"Verseau\">Verseau</option>\r\n              <option value=\"Poissons\">Poissons</option>\r\n              <option value=\"Bélier\">Bélier</option>\r\n              <option value=\"Taureau\">Taureau</option>\r\n              <option value=\"Gémeaux\">Gémeaux</option>\r\n              <option value=\"Cancer\">Cancer</option>\r\n              <option value=\"Lion\">Lion</option>\r\n              <option value=\"Vierge\">Vierge</option>\r\n              <option value=\"Scorpion\">Scorpion</option>\r\n              <option value=\"Sagittaire\">Sagittaire</option>\r\n              <option value=\"Capricorne\">Capricorne</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n          {/*--------------------------SAVE-------------------------- */}\r\n            <button type=\"submit\">Sauvegarder</button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Preference;\r\n","//https://api-adresse.data.gouv.fr/search/?q=Cergy&type=municipality&autocomplete=1\r\nimport React, { Component } from 'react';\r\n\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n/**\r\n * Composant de test (Théo)\r\n * J'utilise ce composant à l'adresse /position afin d'effectuer \r\n * des tests pour savoir si il est cohérent de le rajouter\r\n * lors de l'inscription afin de recup les coordonnées GPS \r\n * pour pouvoir calculer la distance entre deux personnes\r\n * ------------------------------------------------------\r\n * Si tu veux tester un truc rapido, utilise cette page pour ne \r\n * pas tout casser ;)\r\n */\r\n\r\nclass Position extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          alertShow: false, alertMessage : \"\", alertVariant:\"\",//Affichage, message et type de l'alerte\r\n          ville: \"\", //Input avec la ville\r\n          name: \"\", context:null, lat: null, long: null //Res de l'API, ville et coordonnées GPS\r\n          \r\n        };\r\n      }\r\n     \r\n      sendLogin(event) {\r\n        event.preventDefault();\r\n\r\n      }\r\n\r\n      inputChangeVille(event){\r\n        event.preventDefault();\r\n        this.setState({\r\n          ville: event.target.value\r\n        })\r\n        //il faut que rien soit envoyé si le champ est vide\r\n        console.log(\"Value = \"+event.target.value);\r\n        if(event.target.value!==\"\"){\r\n          const axios = require('axios').default;\r\n          const url = \"https://api-adresse.data.gouv.fr/search/?q=\"+event.target.value+\"&type=municipality&autocomplete=1\"\r\n          axios.get(url)\r\n          .then(res => {\r\n            console.log(res);\r\n            if(res.data!==null){\r\n              if(res.data.features[0]!=null){\r\n                this.setState({\r\n                name: res.data.features[0].properties.city,\r\n                lat: res.data.features[0].geometry.coordinates[1],\r\n                long: res.data.features[0].geometry.coordinates[0],\r\n                context: res.data.features[0].properties.context\r\n                })\r\n              }\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            //Affichage en jaune qu'il y a une erreur dans la requête\r\n            this.setState({alertShow:true,alertMessage:\"Une erreur s'est produite.\",alertVariant:\"warning\"});\r\n          });\r\n        }\r\n      }\r\n\r\n    render(){\r\n      return(\r\n        <div>\r\n          <Alert\r\n          variant={this.state.alertVariant} \r\n          id=\"AlertIncorrect\" \r\n          show={this.state.alertShow} \r\n          onClose={() => this.setState({alertShow:false})}\r\n          dismissible>\r\n            {this.state.alertMessage}\r\n          </Alert>\r\n          <h2>Page de Test #Théo hehe</h2>\r\n          <img \r\n          src=\"https://projetwebeisti.yj.fr/imageCarteEtudiante/44.jpg\"\r\n          height=\"300px\"\r\n          width=\"300px\"\r\n          alt=\"Carte étudiante de l'id 44\"\r\n          >\r\n\r\n          </img>\r\n          {/* Formulaire de position */}\r\n          <form onSubmit={event => this.sendLogin(event)}>\r\n            <input className=\"input\"\r\n              id=\"ville\"\r\n              name=\"ville\"\r\n              type=\"text\"\r\n              placeholder=\"Ta ville\"\r\n              value={this.state.ville}\r\n              onChange={event => this.inputChangeVille(event)} \r\n            /><label htmlFor=\"ville\">\r\n              {this.state.name===\"\"?\r\n              \"\":this.state.name+\" - \"+this.state.context}\r\n              </label>\r\n            {/* Peut-être faire une liste déroulante si l'api met pas la ville en 1er */}\r\n            <br />\r\n            <button className=\"btn btn-danger\" type=\"submit\">Ne fais rien</button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Position;","import React, { Component } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {URL_API} from '../App';\r\nimport NewMatch from '../messagerie/newMatch';\r\n\r\nclass Pageprincipale extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connected: true //true : utilisateur connecté; false : utilisateur non connecté\r\n        }\r\n      }\r\n    \r\n    /**\r\n     * Page mise à jour\r\n     */\r\n    componentDidMount(){\r\n        /* Vérif des cookies ID et KEY */\r\n        this.verifConnexion();\r\n        //Il est plus judicieux de faire cette vérif dans PHP\r\n        //lors de chaque requêtes avec une variable renvoyé pour\r\n        //pouvoir rediriger si le couple n'est pas bon\r\n    }\r\n    \r\n    /**\r\n     * Met à jour l'état connected selon la véracité \r\n     * du couple (Cookie.get(\"ID\"),Cookie.get(\"KEY\"))\r\n     */\r\n    verifConnexion() {\r\n        /* A executer à chaque fois que l'on veut utiliser l'id :\r\n            this.verifConnexion();\r\n            if(this.state.connected){\r\n                alors on est assuré de l'identité du user\r\n            }*/\r\n        const url = URL_API+'isConnected.php';\r\n        const axios = require('axios').default;  //Requêtes HTTP\r\n        let config = {\r\n            headers: {\r\n            logginid: Cookies.get(\"ID\"),\r\n            logginkey: Cookies.get(\"KEY\")\r\n            }\r\n        }\r\n        axios.get(url,config)\r\n        .then(res => {\r\n            console.log(\"Connecté ? \"+res.data.connect); //Réponse dans la console\r\n            if(!res.data.connect){ //Mise à jour de connected si réponse négative\r\n                this.setState({\r\n                    connected:false\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n        if(!(Cookies.get(\"ID\")>0)){//Si Cookies.get(\"ID\") n'existe pas on se déconnecte\r\n            this.setState({\r\n                connected:false\r\n            })\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Déconnecte l'utilisateur en changeant l'état connected\r\n     */\r\n    deconnect(){\r\n        this.setState({\r\n            connected:false\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Test le couple (ID,KEY) en \r\n     * appelant la fonction verifConnexion()\r\n     */\r\n    test(){\r\n        this.verifConnexion();\r\n    }\r\n\r\n\r\n    /**\r\n     * Rendu\r\n     */\r\n    render(){\r\n        /* Utilisateur redirigé si non connecté */\r\n        if(!this.state.connected){\r\n            Cookies.remove(\"ID\");//Supression du cookie\r\n            Cookies.remove(\"KEY\");//Suppression du cookie\r\n            return (<Redirect to='/'/>); //Renvoi à la page de connexion\r\n        }\r\n      return(\r\n        <div>\r\n            <button \r\n            className=\"btn btn-danger\" \r\n            onClick={() => this.deconnect()}\r\n            >Déconnexion\r\n            </button>\r\n            <br/>\r\n            <button \r\n            className=\"btn btn-danger\" \r\n            onClick={() => this.test()}\r\n            >Tester (id,key)\r\n            </button>\r\n            <NewMatch />\r\n\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n\r\nexport default Pageprincipale;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport NavBar from './NavBar/NavBar';\r\nimport Accueil from './Accueil/Acceuil';\r\nimport Preference from './Profil/Preference';\r\nimport Position from './Position/Position';\r\nimport Pageprincipale from './Pageprincipale/Pageprincipale';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <HashRouter basename={\"/\"}>\r\n        <div className=\"App\">\r\n          <NavBar />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Accueil} />\r\n            <Route path=\"/preference\" exact component={Preference} />\r\n            <Route path=\"/position\" exact component={Position} />\r\n            <Route path=\"/principale\" exact component={Pageprincipale} />\r\n          </Switch>\r\n          \r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n//J'ai enlevé le fichier projet-web_bdd et mis les fichiers dans /src/api\r\nexport const URL_API = 'https://projetsiteeisti.yj.fr/api/';\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}